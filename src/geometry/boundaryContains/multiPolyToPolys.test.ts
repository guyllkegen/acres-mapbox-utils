import multiPolygonGeoToPolygonGeos from './multiPolygonGeoToPolygonGeos';

const multiPoly = {
  coordinates: [
    [
      [-94.54825401306152, 36.20051215333818],
      [-94.53606605529785, 36.20051215333818],
      [-94.53606605529785, 36.21041592212695],
      [-94.54825401306152, 36.21041592212695],
      [-94.54825401306152, 36.20051215333818],
    ],
    [
      [-94.53505754470825, 36.200581414813584],
      [-94.52877044677734, 36.200581414813584],
      [-94.52877044677734, 36.21038129574799],
      [-94.53505754470825, 36.21038129574799],
      [-94.53505754470825, 36.200581414813584],
    ],
  ],
  type: 'MultiPolygon',
};

const arrayOfPolys = [
  {
    coordinates: [
      [-94.54825401306152, 36.20051215333818],
      [-94.53606605529785, 36.20051215333818],
      [-94.53606605529785, 36.21041592212695],
      [-94.54825401306152, 36.21041592212695],
      [-94.54825401306152, 36.20051215333818],
    ],
    type: 'Polygon',
  },
  {
    coordinates: [
      [-94.53505754470825, 36.200581414813584],
      [-94.52877044677734, 36.200581414813584],
      [-94.52877044677734, 36.21038129574799],
      [-94.53505754470825, 36.21038129574799],
      [-94.53505754470825, 36.200581414813584],
    ],
    type: 'Polygon',
  },
];

describe('multiPolygonGeoToPolygonGeos conversion function', () => {
  it('MultiPoly correctly converts to Array of Polygons', () => {
    const result = multiPolygonGeoToPolygonGeos(multiPoly as any);
    expect(result).toEqual(arrayOfPolys);
  });
});
